// https://programmers.co.kr/learn/courses/30/lessons/12980?language=javascript

/**
 * n = 1: 1
 * n = 2: 1
 * n = 3: 2
 * n = 4: 1
 *
 * 처음 위치: 0, n = 5
 * - 0에서 5로 점프(5): 5
 * - 0에서 2칸 점프(2) 2, 현재위치*2 순간이동 4, 점프(1) 5: 3
 * - 0에서 1칸 점프(1) 1, 순간이동 2, 순간이동 4, 점프(1) 5: 2
 * 최소 건전지 사용량: 2
 *
 * n = 6
 * - 0에서 1칸 점프(1) 1, 순간이동 2, 점프(1) 3, 순간이동 6: 2
 *
 * n = 7
 * - 0에서 1칸 점프(1) 1, 순간이동 2, 점프(1) 3, 순간이동 6, 점프(1): 3
 *
 * n = 8
 * - 0에서 1칸 점프(1) 1, 순간이동 2, 순간이동 4, 순간이동 8: 1
 *
 * n = 9
 * - 0에서 1칸 점프(1) 1, 순간이동 2, 순간이동 4, 순간이동 8, 점프(1): 2
 *
 * ...
 *
 * 짝수인 경우, 2로 나눔
 * 12 -> 6 -> 3
 *
 * 홀수가 나오면 1을 뺌
 * 3 -> 2 -> 1 -> 0
 *   -1        -1
 * 0이 나올때까지 반복하고 여태 뺀 수를 반환
 *
 * n = 5000
 *
 * 5000 -> 2500 -> 1250 -> 625 -> 624 (-1)
 * 624 -> 312 -> 156 -> 78 -> 39 -> 38 (-1)
 * 38 -> 19 -> 18 (-1)
 * 18 -> 9 -> 8 (-1)
 * 8 -> 4 -> 2 -> 1 -> 0 (-1)
 * 최소 건전지량: 5
 *
 *
 * @param {number} n 가려는 곳
 * @return {number} 최소 건전지 사용량
 */
function solution(n) {
  let answer = 0;
  while (n) {
    if (n % 2) {
      n -= 1;
      answer += 1;
    }
    n /= 2;
  }
  return answer;
}

let n;

[n] = [5];
console.log(solution(n)); // 2
